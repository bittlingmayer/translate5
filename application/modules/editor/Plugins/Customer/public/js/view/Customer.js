/*
 * File: app/view/customer/Panel.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Editor.plugins.Customer.view.Customer', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.customerPanel',
    itemId:'customerPanel',
    requires: [
        'Editor.plugins.Customer.view.CustomerViewModel',
        'Editor.plugins.Customer.view.CustomerViewController',
    ],

    controller: 'customerPanel',
    viewModel: {
        type: 'customerPanel'
    },
    listeners: {
        activate: {
            fn: 'reloadCustomerStore',//when customers panel is displayed,this function is executed in the ViewController
            scope: 'controller'
        },
        render:{
            fn:'onCustomerPanelRender',
            scope:'controller'
        }
    },
    shrinkWrap: 0,
    layout: 'border',
    collapsed: false,
    title: '#UT#Kundenübersicht',
    defaultListenerScope: true,
    defaultButton: 'saveButton',
    referenceHolder: true,
    dockedItems: [
        {
            xtype: 'toolbar',
            dock: 'top',
            items: [
                {
                    xtype: 'button',
                    iconCls: 'icon-add',
                    text: 'Hinzufügen',
                    listeners: {
                        click: {
                            fn: 'add',
                            scope: 'controller'
                        }
                    }
                },
                {
                    xtype: 'button',
                    iconCls: 'icon-refresh',
                    text: 'Aktualisieren',
                    listeners: {
                        click: {
                            fn: 'refresh',
                            scope: 'controller'
                        }
                    }
                },
                {
                    xtype: 'tbseparator'
                },
                {
                    xtype: 'button',
                    text: 'Sortierung / Filterung zurücksetzen',
                    listeners: {
                        click: {
                            fn: 'clearFilterAndSort',
                            scope: 'controller'
                        }
                    }
                }
            ]
        }
    ],

    initConfig: function(instanceConfig) {
        var me = this,
            config = {
                title: me.title, //see EXT6UPD-9
                items: [
                    {
                        xtype: 'gridpanel',
                        flex: 0.7,
                        region: 'center',
                        split: true,
                        reference: 'list',
                        resizable: false,
                        title: '',
                        forceFit: true,
                        bind: {
                            store: '{customers}'
                        },
                        columns: [
                            {
                                xtype: 'gridcolumn',
                                dataIndex: 'name',
                                text: 'Kundenname',
                                filter: {
                                    type: 'string'
                                }
                            },
                            {
                                xtype: 'gridcolumn',
                                dataIndex: 'number',
                                text: 'Kundennummer',
                                filter: {
                                    type: 'string'
                                }
                            }
                        ],
                        listeners: {
                            itemdblclick: {
                                fn: 'dblclick',
                                scope: 'controller'
                            }
                        },
                        selModel: {
                            selType: 'rowmodel'
                        },
                        plugins: [
                            {
                                ptype: 'gridfilters'
                            }
                        ],
                        viewConfig: {
                            listeners: {
                                beforerefresh: 'onViewBeforeRefresh'
                            }
                        }
                    },
                    {
                        xtype: 'panel',
                        flex: 0.3,
                        region: 'east',
                        split: true,
                        reference: 'display',
                        width: 150,
                        layout: 'card',
                        bodyBorder: true,
                        items: [
                            {
                                xtype: 'form',
                                reference: 'form',
                                bodyPadding: 10,
                                fieldDefaults: {
                                    anchor: '1'
                                },
                                bind: {
                                    disabled: '{!record}',
                                    title: '{title}'
                                },
                                items: [
                                    {
                                        xtype: 'textfield',
                                        fieldLabel: 'Kundenname',
                                        name: 'name',
                                        allowBlank: false,
                                        maxLength: 255,
                                        minLength: 3
                                    },
                                    {
                                        xtype: 'textfield',
                                        fieldLabel: 'Kundennummer',
                                        name: 'number',
                                        allowBlank: false,
                                        maxLength: 255,
                                        minLength: 3
                                    },
                                    {
                                        xtype: 'container',
                                        padding: 10,
                                        layout: {
                                            type: 'hbox',
                                            align: 'middle',
                                            pack: 'center'
                                        },
                                        items: [
                                            {
                                                xtype: 'button',
                                                flex: 1,
                                                formBind: true,
                                                itemId: 'saveButton',
                                                reference: 'saveButton',
                                                margin: 5,
                                                text: 'Speichern',
                                                listeners: {
                                                    click: {
                                                        fn: 'save',
                                                        scope: 'controller'
                                                    }
                                                }
                                            },
                                            {
                                                xtype: 'button',
                                                flex: 1,
                                                itemId: 'cancelButton',
                                                margin: 5,
                                                text: 'Abbrechen',
                                                listeners: {
                                                    click: {
                                                        fn: 'cancelEdit',
                                                        scope: 'controller'
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            };
        if (instanceConfig) {
            me.self.getConfigurator().merge(me, config, instanceConfig);
        }
        return me.callParent([config]);
    },
    initComponent: function() {
        var me = this;
        me.callParent(arguments);
        //this will enable the store to be loaded when onFilterEndUpdate is called,it is disabled on store configuration
        me.getViewModel().getStore('customers').suppressNextFilter = false;
    },
    
    onViewBeforeRefresh: function(dataview, eOpts) {
        //workaround / fix for TMUE-11
        dataview.getSelectionModel().deselectAll();
    }

});